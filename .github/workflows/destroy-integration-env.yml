name: Teardown LZ Integration Environment

on:
  workflow_dispatch:

env:
  ENV_TFVARS_FILE_NAME: integration.tfvars
  BASE_LAST_OUTPUT: ${{ secrets.BASE_OUTPUT }}
  WE_LAST_OUTPUT: ${{ secrets.WE_OUTPUT }}
  REMOTE_STATE_BACKEND: ${{ secrets.BASE_TFSTATE }}
  WE_REMOTE_STATE_BACKEND: ${{ secrets.WE_TFSTATE }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  TF_VAR_api_private_key: ${{ secrets.TF_VAR_API_PRIVATE_KEY }}
  TF_VAR_api_fingerprint: ${{ vars.TF_VAR_API_FINGERPRINT }}
  TF_VAR_region: ${{ vars.TF_VAR_REGION }}
  TF_VAR_ssh_public_key_list: ${{ vars.TF_VAR_SSH_PUBLIC_KEY_LIST }}
  TF_VAR_tenancy_ocid: ${{ vars.TF_VAR_TENANCY_OCID }}
  TF_VAR_current_user_ocid: ${{ vars.TF_VAR_CURRENT_USER_OCID }}
  TF_VAR_nonprod_budget_alert_rule_recipients: ${{ vars.TEST_EMAIL_ADDRESS }}
  TF_VAR_nonprod_domain_admin_email: ${{ vars.TEST_EMAIL_ADDRESS }}
  TF_VAR_prod_budget_alert_rule_recipients: ${{ vars.TEST_EMAIL_ADDRESS }}
  TF_VAR_prod_domain_admin_email: ${{ vars.TEST_EMAIL_ADDRESS }}


jobs:
  teardown-we-exp:
    runs-on: ubuntu-latest
    # needs: teardown
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.9
      uses: actions/setup-python@v3
      with:
        python-version: "3.9"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        curl https://releases.hashicorp.com/terraform/1.2.2/terraform_1.2.2_linux_amd64.zip > terraform.zip
        ls -l ~/
        unzip terraform.zip -d ~/bin
        ~/bin/terraform --version
        pip install -r test/requirements.txt
    - name: Run Terraform destroy on Workload Expansion
      run: |
        cd templates
        elz-workload/add_workload.sh TestWE P
        cd elz-workload-P-TestWE
        ./BackEnd.sh
        cat backend.tf
        curl $BASE_LAST_OUTPUT > base_output.json 
        curl $WE_LAST_OUTPUT > we_output.json 
        python3 read_base_vars.py -e P -f base_output.json >> $ENV_TFVARS_FILE_NAME
        terraform init -backend-config="address=$WE_REMOTE_STATE_BACKEND" -backend-config="update_method=PUT"
        terraform validate
        terraform destroy  -var-file $ENV_TFVARS_FILE_NAME -auto-approve
        terraform output -json > we_output.json
        curl -X PUT -H "Content-Type: application/json"  -d @we_output.json $WE_LAST_OUTPUT


  cleanup-base-lz:
    runs-on: ubuntu-latest
    needs: teardown-we-exp

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.9
      uses: actions/setup-python@v3
      with:
        python-version: "3.9"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r test/requirements.txt
    - name: Run LZ Cleanup Script
      run: |
        cd templates/enterprise-landing-zone
        python3 destroy_lz.py -v -r PHX
        

  teardown-base-lz:
    runs-on: ubuntu-latest
    needs: cleanup-base-lz

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.9
      uses: actions/setup-python@v3
      with:
        python-version: "3.9"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        curl https://releases.hashicorp.com/terraform/1.2.2/terraform_1.2.2_linux_amd64.zip > terraform.zip
        ls -l ~/
        unzip terraform.zip -d ~/bin
        ~/bin/terraform --version
        pip install -r test/requirements.txt
    - name: Run Terraform destroy
      run: |
        cd templates/enterprise-landing-zone
        ./BackEnd.sh
        cat backend.tf
        curl $BASE_LAST_OUTPUT > base_output.json 
        curl $WE_LAST_OUTPUT > we_output.json 
        cp $ENV_TFVARS_FILE_NAME  updated-$ENV_TFVARS_FILE_NAME
        python3 read_workload_vars.py -f base_output.json -p we_output.json >> updated-$ENV_TFVARS_FILE_NAME
        terraform init -backend-config="address=$REMOTE_STATE_BACKEND" -backend-config="update_method=PUT"
        terraform validate  
        terraform destroy -var-file=updated-$ENV_TFVARS_FILE_NAME -auto-approve
        terraform output -json > base_output.json
        curl -X PUT -H "Content-Type: application/json"  -d @base_output.json $BASE_LAST_OUTPUT
            
